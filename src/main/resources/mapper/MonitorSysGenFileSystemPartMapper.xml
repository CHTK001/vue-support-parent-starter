<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chua.starter.monitor.starter.mapper.MonitorSysGenFileSystemPartMapper">

    <!-- 根据文件ID查询分片列表 -->
    <select id="selectByFileId" resultType="com.chua.starter.monitor.starter.entity.MonitorSysGenFileSystemPart">
        SELECT * FROM monitor_sys_gen_file_system_part
        WHERE monitor_sys_gen_file_system_id = #{fileId}
        ORDER BY monitor_sys_gen_file_system_part_index ASC
    </select>

    <!-- 根据文件ID和分片序号查询分片 -->
    <select id="selectByFileIdAndIndex" resultType="com.chua.starter.monitor.starter.entity.MonitorSysGenFileSystemPart">
        SELECT * FROM monitor_sys_gen_file_system_part
        WHERE monitor_sys_gen_file_system_id = #{fileId}
        AND monitor_sys_gen_file_system_part_index = #{partIndex}
        LIMIT 1
    </select>

    <!-- 根据文件ID查询已完成的分片数量 -->
    <select id="countCompletedPartsByFileId" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM monitor_sys_gen_file_system_part
        WHERE monitor_sys_gen_file_system_id = #{fileId}
        AND monitor_sys_gen_file_system_part_status = 2
    </select>

    <!-- 根据文件ID查询分片总数 -->
    <select id="countPartsByFileId" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM monitor_sys_gen_file_system_part
        WHERE monitor_sys_gen_file_system_id = #{fileId}
    </select>

    <!-- 更新分片状态 -->
    <update id="updatePartStatus">
        UPDATE monitor_sys_gen_file_system_part
        SET monitor_sys_gen_file_system_part_status = #{status},
            update_time = NOW()
        WHERE monitor_sys_gen_file_system_part_id = #{partId}
    </update>

    <!-- 批量更新分片状态 -->
    <update id="batchUpdatePartStatusByFileId">
        UPDATE monitor_sys_gen_file_system_part
        SET monitor_sys_gen_file_system_part_status = #{status},
            update_time = NOW()
        WHERE monitor_sys_gen_file_system_id = #{fileId}
    </update>

    <!-- 根据文件ID删除所有分片 -->
    <delete id="deleteByFileId">
        DELETE FROM monitor_sys_gen_file_system_part
        WHERE monitor_sys_gen_file_system_id = #{fileId}
    </delete>

    <!-- 查询失败的分片列表 -->
    <select id="selectFailedParts" resultType="com.chua.starter.monitor.starter.entity.MonitorSysGenFileSystemPart">
        <![CDATA[
        SELECT * FROM monitor_sys_gen_file_system_part
        WHERE monitor_sys_gen_file_system_part_status = 3
        AND monitor_sys_gen_file_system_part_retry_count < #{maxRetryCount}
        ORDER BY create_time ASC
        ]]>
    </select>

    <!-- 增加分片重试次数 -->
    <update id="incrementRetryCount">
        UPDATE monitor_sys_gen_file_system_part
        SET monitor_sys_gen_file_system_part_retry_count = monitor_sys_gen_file_system_part_retry_count + 1,
            update_time = NOW()
        WHERE monitor_sys_gen_file_system_part_id = #{partId}
    </update>

    <!-- 根据状态查询分片列表 -->
    <select id="selectByStatus" resultType="com.chua.starter.monitor.starter.entity.MonitorSysGenFileSystemPart">
        SELECT * FROM monitor_sys_gen_file_system_part
        WHERE monitor_sys_gen_file_system_part_status = #{status}
        ORDER BY create_time DESC
    </select>

    <!-- 查询分片上传进度 -->
    <select id="getUploadProgress" resultType="java.util.Map">
        <![CDATA[
        SELECT 
            COUNT(*) as total_parts,
            SUM(CASE WHEN monitor_sys_gen_file_system_part_status = 2 THEN 1 ELSE 0 END) as completed_parts,
            SUM(CASE WHEN monitor_sys_gen_file_system_part_status = 1 THEN 1 ELSE 0 END) as processing_parts,
            SUM(CASE WHEN monitor_sys_gen_file_system_part_status = 3 THEN 1 ELSE 0 END) as failed_parts,
            SUM(monitor_sys_gen_file_system_part_size) as total_size,
            SUM(CASE WHEN monitor_sys_gen_file_system_part_status = 2 THEN monitor_sys_gen_file_system_part_size ELSE 0 END) as completed_size
        FROM monitor_sys_gen_file_system_part
        WHERE monitor_sys_gen_file_system_id = #{fileId}
        ]]>
    </select>

    <!-- 批量插入分片记录 -->
    <insert id="batchInsertParts">
        INSERT INTO monitor_sys_gen_file_system_part (
            monitor_sys_gen_file_system_id,
            monitor_sys_gen_file_system_part_index,
            monitor_sys_gen_file_system_part_size,
            monitor_sys_gen_file_system_part_status,
            monitor_sys_gen_file_system_part_retry_count,
            create_time,
            update_time
        ) VALUES
        <foreach collection="parts" item="part" separator=",">
            (
                #{part.monitorSysGenFileSystemId},
                #{part.monitorSysGenFileSystemPartIndex},
                #{part.monitorSysGenFileSystemPartSize},
                #{part.monitorSysGenFileSystemPartStatus},
                #{part.monitorSysGenFileSystemPartRetryCount},
                NOW(),
                NOW()
            )
        </foreach>
    </insert>

</mapper>
