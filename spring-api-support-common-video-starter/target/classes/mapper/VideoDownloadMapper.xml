<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chua.starter.video.mapper.VideoDownloadMapper">
  <resultMap id="BaseResultMap" type="com.chua.starter.video.entity.VideoDownload">
    <!--@mbg.generated-->
    <!--@Table video_download-->
    <id column="video_download_id" jdbcType="VARCHAR" property="videoDownloadId" />
    <result column="video_download_video_id" jdbcType="VARCHAR" property="videoDownloadVideoId" />
    <result column="video_download_url" jdbcType="VARCHAR" property="videoDownloadUrl" />
    <result column="video_download_type" jdbcType="VARCHAR" property="videoDownloadType" />
    <result column="video_download_quality" jdbcType="VARCHAR" property="videoDownloadQuality" />
    <result column="video_download_size" jdbcType="BIGINT" property="videoDownloadSize" />
    <result column="video_download_status" jdbcType="TINYINT" property="videoDownloadStatus" />
    <result column="video_download_count" jdbcType="INTEGER" property="videoDownloadCount" />
    <result column="video_download_last_check_time" jdbcType="TIMESTAMP" property="videoDownloadLastCheckTime" />
    <result column="video_download_create_time" jdbcType="TIMESTAMP" property="videoDownloadCreateTime" />
    <result column="video_download_update_time" jdbcType="TIMESTAMP" property="videoDownloadUpdateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    video_download_id, video_download_video_id, video_download_url, video_download_type, 
    video_download_quality, video_download_size, video_download_status, video_download_count, 
    video_download_last_check_time, video_download_create_time, video_download_update_time
  </sql>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chua.starter.video.entity.VideoDownload">
        <id column="download_id" property="downloadId" />
        <result column="video_id" property="videoId" />
        <result column="download_url" property="downloadUrl" />
        <result column="download_type" property="downloadType" />
        <result column="download_size" property="downloadSize" />
        <result column="download_status" property="downloadStatus" />
        <result column="download_platform" property="downloadPlatform" />
        <result column="download_quality" property="downloadQuality" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="create_by" property="createBy" />
        <result column="update_by" property="updateBy" />
        <result column="create_name" property="createName" />
        <result column="update_name" property="updateName" />
    </resultMap>

    <!-- 批量插入或更新视频下载信息 -->
    <insert id="batchInsertOrUpdate">
        INSERT INTO video_download (
            download_id, video_id, download_url, download_type, 
            download_size, download_status, download_platform, download_quality,
            create_time, update_time, create_by, update_by, create_name, update_name
        ) VALUES 
        <foreach collection="list" item="item" separator=",">
            (
                #{item.downloadId}, #{item.videoId}, #{item.downloadUrl}, #{item.downloadType},
                #{item.downloadSize}, #{item.downloadStatus}, #{item.downloadPlatform}, #{item.downloadQuality},
                #{item.createTime}, #{item.updateTime}, #{item.createBy}, #{item.updateBy}, 
                #{item.createName}, #{item.updateName}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
            download_url = VALUES(download_url),
            download_type = VALUES(download_type),
            download_size = VALUES(download_size),
            download_status = VALUES(download_status),
            download_quality = VALUES(download_quality),
            update_time = VALUES(update_time),
            update_by = VALUES(update_by),
            update_name = VALUES(update_name)
    </insert>
    
    <!-- 根据视频ID查询下载信息 -->
    <select id="findByVideoId" resultMap="BaseResultMap">
        SELECT * FROM video_download
        WHERE video_id = #{videoId}
        ORDER BY download_quality DESC, create_time DESC
    </select>
</mapper>